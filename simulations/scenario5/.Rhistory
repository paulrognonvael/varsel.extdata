bound.conv.rate.block3.bmin1 <- function(n,fun.log.nb.inactive=log.nb.inactive4,fun.log.nb.active=log.nb.active.new,fun.log.nb.inactive.j1=log.nb.inactive3,fun.log.nb.active.j1=log.nb.active.new.j,fun.bmin=bmin1,constant=FALSE){
betamin <- fun.bmin(n,fun.log.nb.inactive,fun.log.nb.active,constant)
prob.block1 <- prob.recov.bound(n,betamin,fun.log.nb.inactive.j1,fun.log.nb.active.j1)
fun.log.nb.inactive.j2 <- function(n){
return(fun.log.nb.inactive(n)+log(1-exp(fun.log.nb.inactive.j1(n)-fun.log.nb.inactive(n))))
}
prob.block2 <- prob.recov.bound(n,betamin*1.01,fun.log.nb.inactive.j2,fun.log.nb.active.j1)
return( prob.block1+prob.block2)
}
df.bmin1 <- data.frame(n = seq(100,10^6,100))
df.bmin1$std.npower1 <- sapply(df.bmin1$n,bound.conv.rate.std1.bmin1)
df.bmin1$std.npower2 <- sapply(df.bmin1$n,bound.conv.rate.std2.bmin1)
df.bmin1$std.expn <- sapply(df.bmin1$n,bound.conv.rate.std3.bmin1)
df.bmin1$block.ndivided2 <- sapply(df.bmin1$n,bound.conv.rate.block1.bmin1)
df.bmin1$block.npower1 <- sapply(df.bmin1$n,bound.conv.rate.block2.bmin1)
df.bmin1$block.npower2 <- sapply(df.bmin1$n,bound.conv.rate.block3.bmin1)
df.bmin1$bmin.j2 <- 'bmin1'
ggplot(df.bmin1,aes(x=n)) +
geom_line(aes(y=block.ndivided2/std.npower1, linetype = "1_")) +
geom_line(aes(y=block.npower1/std.npower2, linetype = "2_")) +
geom_line(aes(y=block.npower2/std.expn , linetype = "3_")) +
scale_x_log10() +
scale_linetype_manual(TeX(r"(p(1)-s(1)\,vs\,p-s:)"),values=c("1_"=1,"2_"=2, "3_"=3),labels=c(TeX(r"($n/2\,vs\,n$)"),TeX(r"($n\,vs\,n^2$)"),TeX(r"($n^2\,vs\,e^{n/10}$)")))+
ylab(TeX(r"(Probability)")) +
coord_cartesian(xlim = c(10^2,10^6),ylim = c(0,1))+
theme_light(base_size = 13)+
theme(panel.grid.minor.x = element_blank(),panel.grid.minor.y = element_blank(),legend.text.align = 0)
bound.conv.rate.block1.bmin2 <- function(n,fun.log.nb.inactive=log.nb.inactive2,fun.log.nb.active=log.nb.active.new,fun.log.nb.inactive.j1=log.nb.inactive1,fun.log.nb.active.j1=log.nb.active.new.j,fun.bmin=bmin1,constant=FALSE){
betamin <- fun.bmin(n,fun.log.nb.inactive,fun.log.nb.active,constant)
prob.block1 <- prob.recov.bound(n,betamin,fun.log.nb.inactive.j1,fun.log.nb.active.j1)
fun.log.nb.inactive.j2 <- function(n){
return(fun.log.nb.inactive(n)+log(1-exp(fun.log.nb.inactive.j1(n)-fun.log.nb.inactive(n))))
}
prob.block2 <- prob.recov.bound(n,betamin*1.1,fun.log.nb.inactive.j2,fun.log.nb.active.j1)
return( prob.block1+prob.block2)
}
bound.conv.rate.block2.bmin2 <- function(n,fun.log.nb.inactive=log.nb.inactive3,fun.log.nb.active=log.nb.active.new,fun.log.nb.inactive.j1=log.nb.inactive2,fun.log.nb.active.j1=log.nb.active.new.j,fun.bmin=bmin1,constant=FALSE){
betamin <- fun.bmin(n,fun.log.nb.inactive,fun.log.nb.active,constant)
prob.block1 <- prob.recov.bound(n,betamin,fun.log.nb.inactive.j1,fun.log.nb.active.j1)
fun.log.nb.inactive.j2 <- function(n){
return(fun.log.nb.inactive(n)+log(1-exp(fun.log.nb.inactive.j1(n)-fun.log.nb.inactive(n))))
}
prob.block2 <- prob.recov.bound(n,betamin*1.1,fun.log.nb.inactive.j2,fun.log.nb.active.j1)
return( prob.block1+prob.block2)
}
bound.conv.rate.block3.bmin2 <- function(n,fun.log.nb.inactive=log.nb.inactive4,fun.log.nb.active=log.nb.active.new,fun.log.nb.inactive.j1=log.nb.inactive3,fun.log.nb.active.j1=log.nb.active.new.j,fun.bmin=bmin1,constant=FALSE){
betamin <- fun.bmin(n,fun.log.nb.inactive,fun.log.nb.active,constant)
prob.block1 <- prob.recov.bound(n,betamin,fun.log.nb.inactive.j1,fun.log.nb.active.j1)
fun.log.nb.inactive.j2 <- function(n){
return(fun.log.nb.inactive(n)+log(1-exp(fun.log.nb.inactive.j1(n)-fun.log.nb.inactive(n))))
}
prob.block2 <- prob.recov.bound(n,betamin*1.1,fun.log.nb.inactive.j2,fun.log.nb.active.j1)
return( prob.block1+prob.block2)
}
df.bmin2 <- data.frame(n = seq(100,10^6,100))
df.bmin2$std.npower1 <- sapply(df.bmin2$n,bound.conv.rate.std1.bmin1)
df.bmin2$std.npower2 <- sapply(df.bmin2$n,bound.conv.rate.std2.bmin1)
df.bmin2$std.expn <- sapply(df.bmin1$n,bound.conv.rate.std3.bmin1)
df.bmin2$block.ndivided2 <- sapply(df.bmin2$n,bound.conv.rate.block1.bmin2)
df.bmin2$block.npower1 <- sapply(df.bmin2$n,bound.conv.rate.block2.bmin2)
df.bmin2$block.npower2 <- sapply(df.bmin1$n,bound.conv.rate.block3.bmin2)
df.bmin2$bmin.j2 <- 'bmin2'
ggplot(df.bmin2,aes(x=n)) +
geom_line(aes(y=block.ndivided2/std.npower1, linetype = "1_")) +
geom_line(aes(y=block.npower1/std.npower2, linetype = "2_")) +
geom_line(aes(y=block.npower2/std.expn , linetype = "3_")) +
scale_x_log10() +
scale_linetype_manual(TeX(r"(p(1)-s(1)\,vs\,p-s:)"),values=c("1_"=1,"2_"=2, "3_"=3),labels=c(TeX(r"($n/2\,vs\,n$)"),TeX(r"($n\,vs\,n^2$)"),TeX(r"($n^2\,vs\,e^{n/10}$)")))+
ylab(TeX(r"(Probability)")) +
coord_cartesian(xlim = c(10^2,10^6),ylim = c(0,1))+
theme_light(base_size = 13)+
theme(panel.grid.minor.x = element_blank(),panel.grid.minor.y = element_blank(),legend.text.align = 0)
df.bmin.binded <-rbind(df.bmin1,df.bmin2)
bmin_names <- list(
'bmin1'=TeX(r"($\beta_{min}^*(1)=\beta_{min}^*,\, \beta_{min}^*(2)\approx\beta_{min}^*$)"),
'bmin2'=TeX(r"($\beta_{min}^*(1)=\beta_{min}^*,\,\beta_{min}^*(2)=1.1 \, \beta_{min}^*$)")
)
mylabel <- function(val) { return(lapply(val, function(x) bmin_names[x])) }
ggplot(df.bmin.binded,aes(x=n)) + facet_grid(.~bmin.j2,labeller = mylabel) +
geom_line(aes(y=block.ndivided2/std.npower1, linetype = "1_")) +
geom_line(aes(y=block.npower1/std.npower2, linetype = "2_")) +
geom_line(aes(y=block.npower2/std.expn , linetype = "3_")) +
scale_x_log10() +
scale_linetype_manual(TeX(r"(p(1)-s(1)\,vs\,p-s:\,\,)"),values=c("1_"=1,"2_"=2, "3_"=3),labels=c(TeX(r"($n/2\,vs\,n$)"),TeX(r"($n\,vs\,n^2$)"),TeX(r"($n^2\,vs\,e^{n/10}$)")))+
ylab(TeX(r"($CR^1/CR^J$)")) +
coord_cartesian(xlim = c(10^2,10^6),ylim = c(0,1))+
theme_light(base_size = 13)+
theme(panel.grid.minor.x = element_blank(),panel.grid.minor.y = element_blank(),legend.text.align = 0, legend.position = 'bottom',
strip.background = element_rect(colour="black", fill="white"),strip.text = element_text(colour = 'black'))
bmin_names <- list(
'bmin1'=TeX(r"($\beta_{min}^*_1=\beta_{min}^*,\, \beta_{min}^*_2\approx\beta_{min}^*$)"),
'bmin2'=TeX(r"($\beta_{min}^*_1=\beta_{min}^*,\,\beta_{min}^*_2=1.1 \, \beta_{min}^*$)")
)
mylabel <- function(val) { return(lapply(val, function(x) bmin_names[x])) }
ggplot(df.bmin.binded,aes(x=n)) + facet_grid(.~bmin.j2,labeller = mylabel) +
geom_line(aes(y=block.ndivided2/std.npower1, linetype = "1_")) +
geom_line(aes(y=block.npower1/std.npower2, linetype = "2_")) +
geom_line(aes(y=block.npower2/std.expn , linetype = "3_")) +
scale_x_log10() +
scale_linetype_manual("Scenario",values=c("1_"=1,"2_"=2, "3_"=3),labels=c("1","2","3"))+
ylab(TeX(r"($OR_{orth}/OR^b_{orth}$)")) +
coord_cartesian(xlim = c(10^2,10^6),ylim = c(0,1))+
theme_light(base_size = 13)+
theme(panel.grid.minor.x = element_blank(),panel.grid.minor.y = element_blank(),legend.text.align = 0, legend.position = 'bottom',
strip.background = element_rect(colour="black", fill="white"),strip.text = element_text(colour = 'black'))
bmin_names <- list(
'bmin1'=TeX(r"($\beta_{min}^*_{min,1}\approx\beta_{min}^*,\, \beta_{min,2}^*_2=\beta_{min}^*$)"),
'bmin2'=TeX(r"($\beta_{min}^*_{min,1}=1.1 \, \beta_{min}^*,\,\beta_{min,2}^*_2=\beta_{min}^*$)")
)
mylabel <- function(val) { return(lapply(val, function(x) bmin_names[x])) }
ggplot(df.bmin.binded,aes(x=n)) + facet_grid(.~bmin.j2,labeller = mylabel) +
geom_line(aes(y=block.ndivided2/std.npower1, linetype = "1_")) +
geom_line(aes(y=block.npower1/std.npower2, linetype = "2_")) +
geom_line(aes(y=block.npower2/std.expn , linetype = "3_")) +
scale_x_log10() +
scale_linetype_manual("Scenario",values=c("1_"=1,"2_"=2, "3_"=3),labels=c("1","2","3"))+
ylab(TeX(r"($OR_{orth}/OR^b_{orth}$)")) +
coord_cartesian(xlim = c(10^2,10^6),ylim = c(0,1))+
theme_light(base_size = 13)+
theme(panel.grid.minor.x = element_blank(),panel.grid.minor.y = element_blank(),legend.text.align = 0, legend.position = 'bottom',
strip.background = element_rect(colour="black", fill="white"),strip.text = element_text(colour = 'black'))
bmin_names <- list(
'bmin1'=TeX(r"($\beta_{min}^*_{min,1}\approx\beta_{min}^*,\, \beta_{min,2}^*=\beta_{min}^*$)"),
'bmin2'=TeX(r"($\beta_{min}^*_{min,1}=1.1 \, \beta_{min}^*,\,\beta_{min,2}^*=\beta_{min}^*$)")
)
mylabel <- function(val) { return(lapply(val, function(x) bmin_names[x])) }
ggplot(df.bmin.binded,aes(x=n)) + facet_grid(.~bmin.j2,labeller = mylabel) +
geom_line(aes(y=block.ndivided2/std.npower1, linetype = "1_")) +
geom_line(aes(y=block.npower1/std.npower2, linetype = "2_")) +
geom_line(aes(y=block.npower2/std.expn , linetype = "3_")) +
scale_x_log10() +
scale_linetype_manual("Scenario",values=c("1_"=1,"2_"=2, "3_"=3),labels=c("1","2","3"))+
ylab(TeX(r"($OR_{orth}/OR^b_{orth}$)")) +
coord_cartesian(xlim = c(10^2,10^6),ylim = c(0,1))+
theme_light(base_size = 13)+
theme(panel.grid.minor.x = element_blank(),panel.grid.minor.y = element_blank(),legend.text.align = 0, legend.position = 'bottom',
strip.background = element_rect(colour="black", fill="white"),strip.text = element_text(colour = 'black'))
ggplot(df.bmin.binded,aes(x=n)) + facet_grid(.~bmin.j2,labeller = mylabel) +
geom_line(aes(y=block.ndivided2/std.npower1, linetype = "1_")) +
geom_line(aes(y=block.npower1/std.npower2, linetype = "2_")) +
geom_line(aes(y=block.npower2/std.expn , linetype = "3_")) +
scale_x_log10() +
scale_linetype_manual("Scenario",values=c("1_"=1,"2_"=2, "3_"=3),labels=c("1","2","3"))+
ylab(TeX(r"($OR_{orth}^b/OR_{orth}$)")) +
coord_cartesian(xlim = c(10^2,10^6),ylim = c(0,1))+
theme_light(base_size = 13)+
theme(panel.grid.minor.x = element_blank(),panel.grid.minor.y = element_blank(),legend.text.align = 0, legend.position = 'bottom',
strip.background = element_rect(colour="black", fill="white"),strip.text = element_text(colour = 'black'))
source('C:/Users/u200038/Downloads/Empirical results/script.scenari.R')
source('C:\Users\u200038\Downloads\Empirical results\script.scenari.R')
source('C:/Users/u200038/Downloads/Empirical results/script.scenari.R')
source('~\Downloads\Empirical results\script.scenari.R')
source('~/Downloads/Empirical results/script.scenari.R')
source("~/.active-rstudio-document")
source('C:/Users/u200038/Downloads/Empirical results/script.scenari.R')
source("C:/Users/u200038/Downloads/Empirical results/script.scenari.R")
source("C:\\Users\\u200038\\Downloads\\Empirical results\\script.scenari.R")
getwd()
source("~\Empirical results\script.scenari.R")
setwd("~/Empiricalresults")
source("scenario1/sim.scenario1.R")
setwd("~/Empiricalresults/scenario1")
knitr::opts_chunk$set(echo = TRUE)
####
res.varn <- data.frame()
for (n  in seq(100,700,100)){
temp<-read.csv(paste0("sim.result.scenario1.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
# res.varn[res.varn$method=="IC s hat",'method'] <- "block IC s hat 3 tweaked"
# res.varn[res.varn$method=="block IC s hat 2",'method'] <- "block IC s hat 2 tweaked"
# res.varn[res.varn$method=="block IC s hat",'method'] <- "block IC s hat tweaked"
# res.varn[res.varn$method=="EBIC exact",'method'] <- "EBIC"
# res.varn[res.varn$method=="IC exact",'method'] <- "IC"
res.varn %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
View(res.varn)
setwd("~/Empiricalresults")
source("scenario1/sim.scenario1.R")
setwd("~/Empiricalresults/scenario1")
knitr::opts_chunk$set(echo = TRUE)
####
res.varn <- data.frame()
for (n  in seq(100,700,100)){
temp<-read.csv(paste0("sim.result.scenario1.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
# res.varn[res.varn$method=="IC s hat",'method'] <- "block IC s hat 3 tweaked"
# res.varn[res.varn$method=="block IC s hat 2",'method'] <- "block IC s hat 2 tweaked"
# res.varn[res.varn$method=="block IC s hat",'method'] <- "block IC s hat tweaked"
# res.varn[res.varn$method=="EBIC exact",'method'] <- "EBIC"
# res.varn[res.varn$method=="IC exact",'method'] <- "IC"
res.varn %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
View(res.varn)
betamin*2
source("scenario1/sim.scenario1.R")
setwd("~/Empiricalresults")
source("scenario1/sim.scenario1.R")
knitr::opts_chunk$set(echo = TRUE)
####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
res.varn <- data.frame()
for (n  in seq(100,700,100)){
temp<-read.csv(paste0("sim.result.scenario1.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
# res.varn[res.varn$method=="IC s hat",'method'] <- "block IC s hat 3 tweaked"
# res.varn[res.varn$method=="block IC s hat 2",'method'] <- "block IC s hat 2 tweaked"
# res.varn[res.varn$method=="block IC s hat",'method'] <- "block IC s hat tweaked"
# res.varn[res.varn$method=="EBIC exact",'method'] <- "EBIC"
# res.varn[res.varn$method=="IC exact",'method'] <- "IC"
res.varn %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
res.varn %>% filterc(method%in%c('baseline1','baseline2','method1.1','method2', 'EBIC')) %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
res.varn %>% filter(method%in%c('baseline1','baseline2','method1.1','method2', 'EBIC')) %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
.rs.restartR()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("scenario3/sim.scenario3.R")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("scenario3/sim.scenario3.R")
knitr::opts_chunk$set(echo = TRUE)
####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
res.varn <- data.frame()
for (n  in seq(100,600,100)){
temp<-read.csv(paste0("sim.result.scenario1.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
res.varn <- data.frame()
for (n  in seq(100,600,100)){
temp<-read.csv(paste0("sim.result.scenario3.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
# res.varn[res.varn$method=="IC s hat",'method'] <- "block IC s hat 3 tweaked"
# res.varn[res.varn$method=="block IC s hat 2",'method'] <- "block IC s hat 2 tweaked"
# res.varn[res.varn$method=="block IC s hat",'me
# res.varn[res.varn$method=="EBIC exact",'method'] <- "EBIC"
# res.varn[res.varn$method=="IC exact",'method'] <- "IC"
res.varn %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
log(log(40))
.rs.restartR()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("scenario3/sim.scenario3.R")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("scenario3/sim.scenario3.R")
knitr::opts_chunk$set(echo = TRUE)
####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
res.varn <- data.frame()
for (n  in seq(100,600,100)){
temp<-read.csv(paste0("sim.result.scenario3.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
# res.varn[res.varn$method=="IC s hat",'method'] <- "block IC s hat 3 tweaked"
# res.varn[res.varn$method=="block IC s hat 2",'method'] <- "block IC s hat 2 tweaked"
# res.varn[res.varn$method=="block IC s hat",'me
# res.varn[res.varn$method=="EBIC exact",'method'] <- "EBIC"
# res.varn[res.varn$method=="IC exact",'method'] <- "IC"
res.varn %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
res.varn <- data.frame()
for (n  in seq(100,600,100)){
temp<-read.csv(paste0("sim.result.scenario3.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
# res.varn[res.varn$method=="IC s hat",'method'] <- "block IC s hat 3 tweaked"
# res.varn[res.varn$method=="block IC s hat 2",'method'] <- "block IC s hat 2 tweaked"
# res.varn[res.varn$method=="block IC s hat",'me
# res.varn[res.varn$method=="EBIC exact",'method'] <- "EBIC"
# res.varn[res.varn$method=="IC exact",'method'] <- "IC"
res.varn %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
res.varn %>%  filter(method%in%c('baseline1','baseline2','method1.1','method2', 'EBIC')) %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
res.varn %>%  filter(method%in%c('baseline1','baseline2','method1.1','method2', 'EBIC')) filter(method%in%c('baseline1','baseline2','method1.1','method2', 'EBIC')) %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
res.varn %>% filter(method%in%c('baseline1','baseline2','method1.1','method2', 'EBIC')) %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
.rs.restartR()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("scenario4/sim.scenario4.R")
knitr::opts_chunk$set(echo = TRUE)
####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
res.varn <- data.frame()
for (n  in seq(100,700,100)){
temp<-read.csv(paste0("sim.result.scenario4.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
# res.varn[res.varn$method=="IC s hat",'method'] <- "block IC s hat 3 tweaked"
# res.varn[res.varn$method=="block IC s hat 2",'method'] <- "block IC s hat 2 tweaked"
# res.varn[res.varn$method=="block IC s hat",'method'] <- "block IC s hat tweaked"
# res.varn[res.varn$method=="EBIC exact",'method'] <- "EBIC"
# res.varn[res.varn$method=="IC exact",'method'] <- "IC"
res.varn %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
res.varn %>% filter(method%in%c('baseline1','baseline2','method1.1','method2', 'EBIC')) %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
res.varn %>% filter(method%in%c('baseline1','baseline2','method1.1','method2', 'EBIC')) %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1),xlim=c(40,300))
.rs.restartR()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("scenario3/sim.scenario3.R")
knitr::opts_chunk$set(echo = TRUE)
####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
res.varn <- data.frame()
for (n  in seq(100,600,100)){
temp<-read.csv(paste0("sim.result.scenario3.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
# res.varn[res.varn$method=="IC s hat",'method'] <- "block IC s hat 3 tweaked"
# res.varn[res.varn$method=="block IC s hat 2",'method'] <- "block IC s hat 2 tweaked"
# res.varn[res.varn$method=="block IC s hat",'me
# res.varn[res.varn$method=="EBIC exact",'method'] <- "EBIC"
# res.varn[res.varn$method=="IC exact",'method'] <- "IC"
res.varn %>% filter(method%in%c('baseline1','baseline2','method1.1','method2', 'EBIC')) %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
knitr::opts_chunk$set(echo = TRUE)
####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
res.varn <- data.frame()
for (n  in seq(100,700,100)){
temp<-read.csv(paste0("sim.result.scenario1.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
# res.varn[res.varn$method=="IC s hat",'method'] <- "block IC s hat 3 tweaked"
# res.varn[res.varn$method=="block IC s hat 2",'method'] <- "block IC s hat 2 tweaked"
# res.varn[res.varn$method=="block IC s hat",'method'] <- "block IC s hat tweaked"
# res.varn[res.varn$method=="EBIC exact",'method'] <- "EBIC"
# res.varn[res.varn$method=="IC exact",'method'] <- "IC"
res.varn %>% filter(method%in%c('baseline1','baseline2','method1.1','method2', 'EBIC')) %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("scenario4/sim.scenario4.R")
.rs.restartR()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("scenario4/sim.scenario4.R")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("scenario4/sim.scenario4.R")
knitr::opts_chunk$set(echo = TRUE)
####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
res.varn <- data.frame()
for (n  in c(40,60,80,seq(100,700,100))){
temp<-read.csv(paste0("sim.result.scenario4.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
# res.varn[res.varn$method=="IC s hat",'method'] <- "block IC s hat 3 tweaked"
# res.varn[res.varn$method=="block IC s hat 2",'method'] <- "block IC s hat 2 tweaked"
# res.varn[res.varn$method=="block IC s hat",'method'] <- "block IC s hat tweaked"
# res.varn[res.varn$method=="EBIC exact",'method'] <- "EBIC"
# res.varn[res.varn$method=="IC exact",'method'] <- "IC"
res.varn %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
res.varn %>% filter(method%in%c('baseline1','baseline2','method1.1','method2', 'EBIC')) %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1),xlim=c(40,300))
View(res.varn)
.rs.restartR()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("scenario4/sim.scenario4.R")
knitr::opts_chunk$set(echo = TRUE)
####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
res.varn <- data.frame()
for (n  in c(40,60,80,seq(100,700,100))){
temp<-read.csv(paste0("sim.result.scenario4.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
# res.varn[res.varn$method=="IC s hat",'method'] <- "block IC s hat 3 tweaked"
# res.varn[res.varn$method=="block IC s hat 2",'method'] <- "block IC s hat 2 tweaked"
# res.varn[res.varn$method=="block IC s hat",'method'] <- "block IC s hat tweaked"
# res.varn[res.varn$method=="EBIC exact",'method'] <- "EBIC"
# res.varn[res.varn$method=="IC exact",'method'] <- "IC"
res.varn %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
res.varn %>% filter(method%in%c('baseline1','baseline2','method1.1','method2', 'EBIC')) %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1),xlim=c(40,300))
View(res.varn)
####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
res.varn <- data.frame()
for (n  in c(20,40,60,80,seq(100,700,100))){
temp<-read.csv(paste0("sim.result.scenario4.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
# res.varn[res.varn$method=="IC s hat",'method'] <- "block IC s hat 3 tweaked"
# res.varn[res.varn$method=="block IC s hat 2",'method'] <- "block IC s hat 2 tweaked"
# res.varn[res.varn$method=="block IC s hat",'method'] <- "block IC s hat tweaked"
# res.varn[res.varn$method=="EBIC exact",'method'] <- "EBIC"
# res.varn[res.varn$method=="IC exact",'method'] <- "IC"
res.varn %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
res.varn %>% filter(method%in%c('baseline1','baseline2','method1.1','method2', 'EBIC')) %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1),xlim=c(40,300))
knitr::opts_chunk$set(echo = TRUE)
####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
res.varn <- data.frame()
for (n  in c(40,60,80,seq(100,700,100))){
temp<-read.csv(paste0("sim.result.scenario3.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
# res.varn[res.varn$method=="IC s hat",'method'] <- "block IC s hat 3 tweaked"
# res.varn[res.varn$method=="block IC s hat 2",'method'] <- "block IC s hat 2 tweaked"
# res.varn[res.varn$method=="block IC s hat",'me
# res.varn[res.varn$method=="EBIC exact",'method'] <- "EBIC"
# res.varn[res.varn$method=="IC exact",'method'] <- "IC"
res.varn %>% filter(method%in%c('baseline1','baseline2','method1.1','method2', 'EBIC')) %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
knitr::opts_chunk$set(echo = TRUE)
####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
res.varn <- data.frame()
for (n  in c(40,60,80,seq(100,700,100))){
temp<-read.csv(paste0("sim.result.scenario1.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
# res.varn[res.varn$method=="IC s hat",'method'] <- "block IC s hat 3 tweaked"
# res.varn[res.varn$method=="block IC s hat 2",'method'] <- "block IC s hat 2 tweaked"
# res.varn[res.varn$method=="block IC s hat",'method'] <- "block IC s hat tweaked"
# res.varn[res.varn$method=="EBIC exact",'method'] <- "EBIC"
# res.varn[res.varn$method=="IC exact",'method'] <- "IC"
res.varn %>% filter(method%in%c('baseline1','baseline2','method1.1','method2', 'EBIC')) %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
.rs.restartR()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("scenario3/sim.scenario3.R")
.rs.restartR()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("scenario4/sim.scenario4.R")
knitr::opts_chunk$set(echo = TRUE)
####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
res.varn <- data.frame()
for (n  in c(20,40,60,80,seq(100,700,100))){
temp<-read.csv(paste0("sim.result.scenario3.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
# res.varn[res.varn$method=="IC s hat",'method'] <- "block IC s hat 3 tweaked"
# res.varn[res.varn$method=="block IC s hat 2",'method'] <- "block IC s hat 2 tweaked"
# res.varn[res.varn$method=="block IC s hat",'me
# res.varn[res.varn$method=="EBIC exact",'method'] <- "EBIC"
# res.varn[res.varn$method=="IC exact",'method'] <- "IC"
res.varn %>% filter(method%in%c('baseline1','baseline2','method1.1','method2', 'EBIC')) %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
knitr::opts_chunk$set(echo = TRUE)
####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
res.varn <- data.frame()
for (n  in c(20,40,60,80,seq(100,700,100))){
temp<-read.csv(paste0("sim.result.scenario1.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
.rs.restartR()
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
source("scenario1/sim.scenario1.R")
knitr::opts_chunk$set(echo = TRUE)
####
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
res.varn <- data.frame()
for (n  in c(20,40,60,80,seq(100,700,100))){
temp<-read.csv(paste0("sim.result.scenario1.n",n,".csv"))
summary.sim.result <- temp %>% group_by(method) %>%
summarise(prob.recovery = mean(recovery),mean.size.sel =mean(est.size))
summary.sim.result$n <- rep(n, nrow(summary.sim.result))
res.varn<- rbind(res.varn,summary.sim.result)
}
# res.varn[res.varn$method=="IC s hat",'method'] <- "block IC s hat 3 tweaked"
# res.varn[res.varn$method=="block IC s hat 2",'method'] <- "block IC s hat 2 tweaked"
# res.varn[res.varn$method=="block IC s hat",'method'] <- "block IC s hat tweaked"
# res.varn[res.varn$method=="EBIC exact",'method'] <- "EBIC"
# res.varn[res.varn$method=="IC exact",'method'] <- "IC"
res.varn %>% filter(method%in%c('baseline1','baseline2','method1.1','method2', 'EBIC')) %>%ggplot() + geom_line(aes(x=n, y=prob.recovery, col=method), size=1) + coord_cartesian(ylim=c(0,1))
